{"name":"Jekyll","tagline":"","body":"jekyll 变量和语法教程\r\n=====================\r\n\r\n> Jekyll会遍历你的站点，来寻找需要处理的文件。任何具有 YAML前置数据的文件都将会被处理，每一个这样的文件, Jekyll都会通过Liquid模板系统使用许多可用的页面变量。下面是一个可用变量的列表。\r\n\r\n\r\n*Jekyll 目录及一些说明*\r\n----------------------\r\n\r\n\r\n* ### Jekyll 标准目录树\r\n\r\n     * _config.yml   ................ Jekyll的配置文件\r\n     \r\n     * _includes     ................... include 文件所在的文件夹\r\n      \r\n     * _layouts      ..................... 模版文件夹\r\n      \r\n     * _posts        ........................ 自己要发布的内容\r\n      \r\n     * _sites        ......................... 预览时产生的文件都放在该文件夹中\r\n     \r\n   -----------------------------\r\n  \r\n* ### Jekyll的安装及配置\r\n\r\n     * _includes文件夹中所放的文件是最终要放到模版中的一些代码片段。\r\n     \r\n     * _layouts中放的一些模版，模版是用包含page或post内容的。 \r\n     \r\n            1. Jekyll的模版使用HTML语法来写，并包含YAML Front Matter。\r\n            2. 所有的模版都可用Liquid来与网站进行交互。\r\n            3. 所有的模版都可以使用全局变量site和page，site变量包含该网站所有可以接触得到的\r\n               内容和元数据(meta-data)，page变量包含的是当前渲染的page或post的所有可以接触\r\n               得到的数据。\r\n           \r\n     *  _post文件夹中放的是自己要发布的post文章。\r\n     \r\n            1. post文件的命名规则为YEAR-MONTH-DATE-title.MARKUP，使用rakepost会自动将post\r\n               文件命名合适。\r\n            2. 而对于page，所有放在根目录下或不以下划线开头的文件夹中有格式的文件都会被\r\n               Jekyll处理成page。这里说的有格式是指文件含有YAML Front Matter。\r\n            3. 所有的post和page都要用markdown或者texile或者HTML语法来写，并可以包含Liquid\r\n               模版的语法。还要有 YAML Front Matter ( Jekyll只处理具有YAML Front Matter\r\n               的文件)。\r\n            4. YAML Frontatter必须放在文件的开头，一对---之间，用户可在这一对---间设置预先\r\n               定义的变量或用户自己的数据：<变量或用户自己的数据>\r\n\r\n   ------------------------------\r\n\r\n\r\n* ### Jekyll模板全局变量\r\n  \r\n        变量    &   描述\r\n    + **site** :全站的信息+_config.yml文件中的配置选项\r\n    + **page** :这个变量中包含YAML前置数据,另外加上两个额外的变量值:url和content。\r\n    + **content** :在布局模板文件中，这里变量包含了页面的子视图。这个变量将会把渲染后的内容插入到模板文件中。\r\n     这个变量不能在文章和页面文件中使用。\r\n    + **paginator** :一旦paginate配置选项被设置了，这个变量才能被使用。\r\n\r\n* ### Jekyll模板Site变量\r\n\r\n        变量\t&   描述\r\n     + **site.time** :\t当前的时间(当你运行Jekyll时的时间)\r\n     + **site.posts** :\t一个按时间逆序的文章列表。\r\n     + **site.related_posts** :\t如果当前被处理的页面是一个文章文件，那这个变量是一个包含了最多10篇相关文章的列表。\r\n       默认来说，这些相关文章是低质量但计算快的。为了得到高质量但计算慢的结果，\r\n       运行Jekyll命令时可以加上--lsi选项。(潜在语意索引)\r\n     + **site.categories.CATEGORY** :所有在CATEGORY分类中的文章列表\r\n     + **site.tags.TAG** :所有拥有TAG标签的文章的列表\r\n     + **site.[CONFIGURATION_DATA]** :截止0.5.2版本，所有在\\_config.yml中的数据都能够通过site变量调用。举例来说，\r\n       如果你有一个这样的选项在你的配置文件中:<code>url:http://higrid.net</code>，那在文章和页面文件中可以这样调用<code>{{ site.url}}</code>。\r\n       Jekyll并不会自动解析修改过的_config.yml文件，你想要启用新的设置选项，你需要重启Jekyll\r\n\r\n* ### Jekyll模板Page变量\r\n\r\n        变量\t&   描述\r\n     + **page.content** :页面中未渲染的内容\r\n     + **page.title** :文章的标题\r\n     + **page.url** :除去域名以外的URL，例子:/2013/12/14/higrid-net.html\r\n     + **page.date** :指定每一篇文章的时间，这个选项能够覆盖一篇文章中前置数据设置的时间，它的格式是这样的:<code>YYYY-MM-DD HH:MM:SS</code>\r\n     + **page.id** :每一篇文章的唯一标示符(在RSS中非常有用) 例子：/2008/12/14/higrid-net\r\n     + **page.categories** :这篇文章隶属的分类的一个列表，分类是通过在\\_post目录中的目录结构推导而来的。\r\n     举例来说，在路径/work/code/_posts/2008-12-24-closures.textile下的文件，这个变量将会是<code>[work,code]</code>。\r\n     这个变量也能在YAML前置数据中被指定。\r\n     + **page.tags** :这篇文章的标签的列表。这些数据能够在YAML前置数据中指定\r\n     + **page.next** :按时间序的下一篇文章\r\n     + **page.content** :按时间序的上一篇文章\r\n    注意:任何你自己指定的自定义前置数据都能够通过page调用。举例来说，如果你在页面的前置数据中设置了<code>custom\\_css: true</code>，那这个值可以在模板可以这样调用:<code>page.custom_css</code>\r\n\r\n* ### Jekyll模板Paginator变量\r\n\r\n        变量\t&   描述\r\n     + **paginator.per_page** :每一个页面上文章的数量\r\n     + **paginator.posts** :当前页面上可用的文章\r\n     + **paginator.total_posts** :所有文章的数量\r\n     + **paginator.total_pages** :所有页面的数量\r\n     + **paginator.page** :当前页面的数量\r\n     + **paginator.previous_page** :前面的页面的数量\r\n     + **paginator.next_page** ：接下来的的页面的数量\t\r\n\r\n ----------------------------\r\n\r\n###Post或Page的创建及发布\r\n\r\n* 创建Post文章\r\n\r\n    rake post title=\"文章标题\"\r\n  \r\n    会自动创建一个具有合适文件名和YAML Front Matter的文件(使用时将\"文章标题\"替换成你要创建的文章的标题)。\r\n\r\n* 创建Page页面\r\n\r\n    rake page name=\"页面名称.md\"   或者\r\n    rake page name=\"pages/页面名称.md\"\r\n    发布Post或Page\r\n    \r\n    git add .\r\n    git commit -m '一些说明'\r\n    git push origin master\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}